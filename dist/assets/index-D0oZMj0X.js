import{J as E,K as h,M as v,N as x,P as O,V as T,W as _,Q as c,U as p,X as N,Y as y,Z as V,$ as w,a3 as g,a4 as D,a5 as l,a0 as M}from"./index-C2ptP9zk.js";import{aa as H,a8 as J,a9 as W,a6 as b,C as k,a7 as B,B as K}from"./index-C2ptP9zk.js";import{r as X}from"./resetPassword-YGq7wX-Z.js";import{c as Z}from"./confirmResetPassword-ED865rvO.js";const R=o=>E(O,x("ConfirmSignUp"),v(),{...h,...o});async function L(o){const{username:e,confirmationCode:a,options:s}=o,t=T.getConfig().Auth?.Cognito;_(t);const{userPoolId:u,userPoolClientId:C,userPoolEndpoint:S}=t,d=s?.clientMetadata;c(!!e,p.EmptyConfirmSignUpUsername),c(!!a,p.EmptyConfirmSignUpCode);const m=N({username:e,userPoolId:u,userPoolClientId:C}),U=R({endpointResolver:M({endpointOverride:S})}),{Session:f}=await U({region:V(t.userPoolId),userAgentValue:y(w.ConfirmSignUp)},{Username:e,ConfirmationCode:a,ClientMetadata:d,ForceAliasCreation:s?.forceAliasCreation,ClientId:t.userPoolClientId,UserContextData:m});return new Promise((r,I)=>{try{const n={isSignUpComplete:!0,nextStep:{signUpStep:"DONE"}},i=g.getState();if(!i.active||i.username!==e){r(n),D();return}g.dispatch({type:"SET_SESSION",value:f});const A=l.listen("auth-internal",({payload:P})=>{switch(P.event){case"autoSignIn":r({isSignUpComplete:!0,nextStep:{signUpStep:"COMPLETE_AUTO_SIGN_IN"}}),A()}});l.dispatch("auth-internal",{event:"confirmSignUp",data:n})}catch(n){I(n)}})}export{H as AuthError,Z as confirmResetPassword,L as confirmSignUp,J as decodeJWT,W as fetchAuthSession,b as getCurrentUser,X as resetPassword,k as signIn,B as signOut,K as signUp};
